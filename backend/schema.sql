
CREATE TABLE IF NOT EXISTS Token (
Id INT PRIMARY KEY,
TokenType VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS Category (
CategoryId BIGINT AUTO_INCREMENT PRIMARY KEY,
Name VARCHAR(255),
Description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS Interest (
InterestId BIGINT AUTO_INCREMENT PRIMARY KEY,
CategoryId BIGINT,
Description VARCHAR(255),
ExperienceLevel VARCHAR(255),
FOREIGN KEY (CategoryId) REFERENCES Category(CategoryId)
);

CREATE TABLE IF NOT EXISTS TypeMessage (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
Name VARCHAR(255),
Description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS Nationality (
Id INT AUTO_INCREMENT PRIMARY KEY,
CountryName VARCHAR(255) UNIQUE,
IsoCode VARCHAR(255),
DocIdFormat VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS StatusAuthorized (
Id INT PRIMARY KEY,
Name VARCHAR(255) UNIQUE
);

CREATE TABLE IF NOT EXISTS University (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
Name VARCHAR(255) UNIQUE,
Campus VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS Degree (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
DegreeName VARCHAR(255),
Descriptions VARCHAR(255),
Code VARCHAR(255),
UniversityId BIGINT,
FOREIGN KEY (UniversityId) REFERENCES University(Id)
);

CREATE TABLE IF NOT EXISTS Role (
Id INT PRIMARY KEY,
Name VARCHAR(255) UNIQUE
);

CREATE TABLE IF NOT EXISTS User (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
FirstName VARCHAR(255),
LastName VARCHAR(255),
UserName VARCHAR(255) UNIQUE,
Password VARCHAR(255),
Email VARCHAR(255) UNIQUE NOT NULL,
Phone VARCHAR(255),
Sex VARCHAR(255),
DocId VARCHAR(255) UNIQUE,
NationalityId INT,
Birthdate DATE,
Picture VARCHAR(255),
DegreeId BIGINT,
UniversityId BIGINT,
RoleId INT,
StatusAuthorizedId INT,
Summary VARCHAR(255),
Address VARCHAR(255),
Github VARCHAR(255),
Linkedin VARCHAR(255),
FOREIGN KEY (NationalityId) REFERENCES Nationality(Id),
FOREIGN KEY (DegreeId) REFERENCES Degree(Id),
FOREIGN KEY (UniversityId) REFERENCES University(Id),
FOREIGN KEY (RoleId) REFERENCES Role(Id),
FOREIGN KEY (StatusAuthorizedId) REFERENCES StatusAuthorized(Id)
);

CREATE TABLE IF NOT EXISTS Online (
UserOnlineId BIGINT PRIMARY KEY,
CreateAt DATE,
Status TINYINT(1),
FOREIGN KEY (UserOnlineId) REFERENCES User(Id)
);

CREATE TABLE IF NOT EXISTS Contact (
ContactId BIGINT AUTO_INCREMENT PRIMARY KEY,
User1Id BIGINT,
User2Id BIGINT,
Status VARCHAR(255),
ChatId VARCHAR(255) UNIQUE,
FOREIGN KEY (User1Id) REFERENCES User(Id),
FOREIGN KEY (User2Id) REFERENCES User(Id)
);

CREATE TABLE IF NOT EXISTS GroupsUsers (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
Name VARCHAR(255),
Description VARCHAR(255),
Picture VARCHAR(255),
AdminOfGroup BIGINT,
ChatId VARCHAR(255) UNIQUE,
FOREIGN KEY (AdminOfGroup) REFERENCES User(Id)
);

CREATE TABLE IF NOT EXISTS Multimedia (
Id VARCHAR(255) PRIMARY KEY,
Type VARCHAR(255),
Ratio FLOAT,
UserId BIGINT,
FileName VARCHAR(255),
CreateAt DATE,
ContentId VARCHAR(255),
ChatId VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS Session (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
UserId BIGINT,
Tk VARCHAR(255),
Ip VARCHAR(255),
RoleId INT,
TokenId INT,
FOREIGN KEY (UserId) REFERENCES User(Id),
FOREIGN KEY (RoleId) REFERENCES Role(Id)
);

CREATE TABLE IF NOT EXISTS Message (
Id VARCHAR(255) PRIMARY KEY,
TypeMessageId BIGINT,
Text VARCHAR(255),
MediaId VARCHAR(255),
Date DATE,
StatusMessage INT,
UserId BIGINT,
ChatId VARCHAR(255),
ChatIdGroup VARCHAR(255),
ResponseTo VARCHAR(255),
FOREIGN KEY (TypeMessageId) REFERENCES TypeMessage(Id),
FOREIGN KEY (MediaId) REFERENCES Multimedia(Id),
FOREIGN KEY (UserId) REFERENCES User(Id),
FOREIGN KEY (ChatId) REFERENCES Contact(ChatId),
FOREIGN KEY (ChatIdGroup) REFERENCES GroupsUsers(ChatId),
FOREIGN KEY (ResponseTo) REFERENCES Message(Id)
);

CREATE TABLE IF NOT EXISTS GroupMembers (
UserId BIGINT,
GroupId BIGINT,
FOREIGN KEY (UserId) REFERENCES User(Id),
FOREIGN KEY (GroupId) REFERENCES GroupsUsers(Id)
);

CREATE TABLE IF NOT EXISTS Education (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
PersonId BIGINT,
Institution VARCHAR(255),
Degree VARCHAR(255),
Campus VARCHAR(255),
GraduationDate DATE,
CountryId BIGINT,
FOREIGN KEY (PersonId) REFERENCES User(Id)
);

CREATE TABLE IF NOT EXISTS WorkExperience (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
PersonId BIGINT,
Company VARCHAR(255),
Position VARCHAR(255),
StartDate DATE,
EndDate DATE,
Description VARCHAR(255),
CountryId BIGINT,
FOREIGN KEY (PersonId) REFERENCES User(Id)
);

CREATE TABLE IF NOT EXISTS Certifications (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
PersonId BIGINT,
Certification VARCHAR(255),
Institution VARCHAR(255),
DateObtained DATE,
FOREIGN KEY (PersonId) REFERENCES User(Id)
);

CREATE TABLE IF NOT EXISTS Skills (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
PersonId BIGINT,
Skill VARCHAR(255),
Level VARCHAR(255),
FOREIGN KEY (PersonId) REFERENCES User(Id)
);

CREATE TABLE IF NOT EXISTS Languages (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
PersonId BIGINT,
Language VARCHAR(255),
Level VARCHAR(255),
FOREIGN KEY (PersonId) REFERENCES User(Id)
);

CREATE TABLE IF NOT EXISTS Project (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
PersonID BIGINT,
Title VARCHAR(255),
Role VARCHAR(255),
Description VARCHAR(255),
Company VARCHAR(255),
Document VARCHAR(255),
ProjectStatus VARCHAR(255),
StartDate DATE,
ExpectedEndDate DATE,
FOREIGN KEY (PersonID) REFERENCES User(Id)
);

CREATE TABLE IF NOT EXISTS Event (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
Description VARCHAR(255),
UserId BIGINT,
OtherUserId BIGINT,
ProyectId BIGINT,
CreateAt DATE,
GroupId BIGINT,
FOREIGN KEY (UserId) REFERENCES User(Id),
FOREIGN KEY (OtherUserId) REFERENCES User(Id),
FOREIGN KEY (ProyectId) REFERENCES Project(Id),
FOREIGN KEY (GroupId) REFERENCES GroupsUsers(Id)
);

CREATE TABLE IF NOT EXISTS Notification (
Id BIGINT AUTO_INCREMENT PRIMARY KEY,
EventId BIGINT,
Description VARCHAR(255),
FOREIGN KEY (EventId) REFERENCES Event(Id)
);
